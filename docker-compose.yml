version: '3.8'
services:

  # PostgreSQL instance
  dbpg-travelpackage:
    image: postgres
    restart: always
    container_name: dbpg-travelpackage
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: db_travelpackage
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5432:5432"
    volumes:
      - /custom/mount:/var/lib/postgresql/data

  controller-1:
    image: apache/kafka:latest
    container_name: controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  controller-2:
    image: apache/kafka:latest
    container_name: controller-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  broker-1:
    image: apache/kafka:latest
    container_name: broker-1
    ports:
      - "29092:9092"
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-1:19092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2

  broker-2:
    image: apache/kafka:latest
    container_name: broker-2
    ports:
      - "39092:9092"
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-2:19092,PLAINTEXT_HOST://localhost:39092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2

  db-booking:
    image: mysql:latest
    restart: always
    environment:
      - 'MYSQL_DATABASE=bookings'
      - 'MYSQL_PASSWORD=123456'
      - 'MYSQL_ROOT_PASSWORD=123456'
      - 'MYSQL_USER=user123'
    ports:
      - '3306:3306'

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  # PostgreSQL for user service
  dbpg-users:
    image: postgres
    restart: always
    container_name: dbpg-users
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: db_users
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5433:5432"
    volumes:
      - /custom/mount-users:/var/lib/postgresql/data

  # User Service
  user-service:
    build: ./user-service
    ports:
      - "8084:8084"
    depends_on:
      - dbpg-users
      - broker-1
      - broker-2
      - broker-3
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpg-users:5432/db_users
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker-1:19092,broker-2:19092,broker-3:19092

  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - travel-package-service
      - booking-service
      - notification-service
      - user-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  # Travel Package Service
  travel-package-service:
    build: ./travel-package-service
    ports:
      - "8081:8081"
    depends_on:
      - dbpg-travelpackage
      - broker-1
      - broker-2
      - broker-3
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_R2DBC_URL=r2dbc:postgresql://dbpg-travelpackage:5432/db_travelpackage
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker-1:19092,broker-2:19092,broker-3:19092

  # Booking Service
  booking-service:
    build: ./booking-service
    ports:
      - "8082:8082"
    depends_on:
      - db-booking
      - redis
      - broker-1
      - broker-2
      - broker-3
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-booking:3306/bookings
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker-1:19092,broker-2:19092,broker-3:19092
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379

  # Notification Service
  notification-service:
    build: ./notification-service
    ports:
      - "8083:8083"
    depends_on:
      - user-service
      - broker-1
      - broker-2
      - broker-3
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker-1:19092,broker-2:19092,broker-3:19092
      - USER_SERVICE_URL=http://user-service:8084

volumes:
  pgdata:
    driver: local
  redis-data:
    driver: local
  pgdata-users:
    driver: local
